// Code generated by mockery v1.0.0. DO NOT EDIT.

package setupclient

import cipher "github.com/skycoin/dmsg/cipher"
import context "context"
import logging "github.com/skycoin/skycoin/src/util/logging"
import mock "github.com/stretchr/testify/mock"
import routing "github.com/skycoin/skywire/pkg/routing"
import snet "github.com/skycoin/skywire/pkg/snet"

// MockRouteGroupDialer is an autogenerated mock type for the RouteGroupDialer type
type MockRouteGroupDialer struct {
	mock.Mock
}

// Dial provides a mock function with given fields: ctx, log, n, setupNodes, req
func (_m *MockRouteGroupDialer) Dial(ctx context.Context, log *logging.Logger, n *snet.Network, setupNodes []cipher.PubKey, req routing.BidirectionalRoute) (routing.EdgeRules, error) {
	ret := _m.Called(ctx, log, n, setupNodes, req)

	var r0 routing.EdgeRules
	if rf, ok := ret.Get(0).(func(context.Context, *logging.Logger, *snet.Network, []cipher.PubKey, routing.BidirectionalRoute) routing.EdgeRules); ok {
		r0 = rf(ctx, log, n, setupNodes, req)
	} else {
		r0 = ret.Get(0).(routing.EdgeRules)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *logging.Logger, *snet.Network, []cipher.PubKey, routing.BidirectionalRoute) error); ok {
		r1 = rf(ctx, log, n, setupNodes, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
